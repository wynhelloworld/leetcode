// Source : https://leetcode.cn/problems/integer-replacement/description/ 
// Author : Yanan Wang
// Date   : 2023-10-26

/**
 * 偶数只能进行 /2 操作
 * 奇数能进行 +1 和 -1 操作, 所以需要进行分类讨论:
 *      奇数的二进制形式:
 *              要么 . . . 0 1
 *              要么 . . . 1 1
 *      针对第一种形式, -1 操作更优, 因为看其二进制形式, 会去掉一个1, 除以2(右移)后, 还可以继续除以2(右移)
 *                    如果 +1, 那么0位上的1会跑到1位上, 除以2(右移)后, 0位上还是1, 还需要进行+1或-1
 *      针对第二种形式, +1 操作更优, 因为看其二进制形式, 会将0、1位上的1全转换到2位上, 1的个数就减少了, +1或-1的
 *                    个数也减少了(注意, 省略号处还有数字, 可能0、1、2、3、4、5位上都有1, 那么+1后, 就有只6位上有1了)
 *                    如果 -1, 那么, 1的个数只会固定减少1
 *          第二种形式, 有个特例, 就是省略号处全是0, 0和1位上是1, 也就是n==3, 那么直接进行-1, 除以2, 就行了.
 */
class Solution {
public:
    int integerReplacement(int n) {
        int ans = 0;
        while (n != 1) {
            if (n % 2 == 0) {
                n /= 2;
                ++ans;
            } else {
                if (n == 3) {
                    n = 1;
                } else if (n % 4 == 1) {
                    n /= 2;
                } else {
                    n = n / 2 + 1;
                }
                ans += 2;
            }
        }
        return ans;
    }
};